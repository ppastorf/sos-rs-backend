events {
    worker_connections  1024;
}

stream {
  upstream backend {
    server sos-rs-api:$PORT;
  }

  server {
    listen $NGINX_PORT;
    proxy_pass backend;
  }
}

# upstream my_service {
#     server api:${PORT};
# }

# # HTTPS server block
# server {
#     listen ${NGINX_PORT} ssl http2;
#     server_name api api.sos-rs.com www.api.sos-rs.com;

#     # SSL certificate and key locations
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;

#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

#     # SSL session settings
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;

#     # SSL certificate optimizations
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;

#     # Add HSTS header to force HTTPS
#     add_header Strict-Transport-Security "max-age=63072000" always;

#     # Add security-related headers
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;

#     # Root directory and index files
#     root /var/www/html;
#     index index.html index.htm;

#     # Additional server configurations can be added here
#     location / {
#         # Additional directives for serving content
#     }
# }
